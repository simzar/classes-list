{"version":3,"sources":["components/Button/Button.tsx","assets/icons/add.svg","components/InputField/InputField.tsx","utils/index.ts","components/ClassroomsList/ClassroomsList.tsx","utils/constants.ts","components/ClassroomsList/index.ts","assets/icons/move.svg","assets/icons/remove.svg","components/SelectMenu/SelectMenu.tsx","components/StudentsListItem/StudentsListItem.tsx","components/StudentsListItem/index.ts","components/StudentsList/StudentsList.tsx","components/StudentsList/index.ts","components/StudentsListWrapper/StudentsListWrapper.tsx","components/ClassroomsContainer/ClassroomsContainer.tsx","components/App/App.tsx","index.tsx","components/ClassroomsList/ClassroomsList.module.scss","components/StudentsList/StudentsList.module.scss","components/StudentsListItem/StudentsListItem.module.scss","components/SelectMenu/SelectMenu.module.scss","components/Button/Button.module.scss","components/ClassroomsContainer/ClassroomsContainer.module.scss","components/InputField/InputField.module.scss","components/App/App.module.scss"],"names":["Button","ref","type","Icon","alt","className","disabled","isLoading","restProps","classes","root","loading","title","forwardRef","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","fillRule","clipRule","d","fill","SvgAdd","_ref","svgRef","titleId","props","width","height","viewBox","xmlns","id","ForwardRef","InputField","placeholder","field","inputRef","maxLength","errors","submitForm","form","TextField","wrapper","variant","inputProps","error","name","helperText","sleep","ms","Promise","resolve","setTimeout","naivelyCompareClassrooms","a","b","aYear","parseInt","bYear","compareStudents","aName","bName","toLowerCase","executeOnEnter","event","fn","ClassroomsList","classrooms","addClassroom","intl","useState","showClassroomInput","setShowClassroomInput","useRef","buttonRef","useEffect","current","focus","initialValues","onSubmit","values","resetForm","setErrors","message","console","isSubmitting","setFieldValue","header","tagName","Add","formatMessage","onClick","e","preventDefault","list","map","classroom","to","listItem","activeClassName","activeListItem","component","onChange","currentTarget","value","toUpperCase","onKeyDown","injectIntl","SvgMove","SvgRemove","SelectMenu","items","handleSelect","anchorElement","handleClose","theme","unstable_createMuiStrictModeTheme","Menu","open","anchorEl","onClose","paper","transformOrigin","vertical","horizontal","style","transform","autoFocus","item","MenuItem","Typography","noWrap","StudentsListItem","handleMoveClick","handleRemoveClick","moveToOptions","menuAnchorElement","setMenuAnchorElement","isRemoving","setIsRemoving","isMoving","setIsMoving","onRemoveClick","onMoveClick","toClassId","actions","actionButton","Move","Remove","v","StudentsList","fetchClassroom","removeStudent","addStudent","moveStudent","classroomName","componentRef","students","setStudents","setIsLoading","isNoClassSelected","setIsNoClassSelected","otherClassrooms","setOtherClassrooms","loadStudents","filter","handleRemoveStudent","studentId","handleMoveStudent","destination","headerSubtext","studentsCount","studentName","input","student","StudentsListWrapper","pathname","useLocation","slice","ClassroomsContainer","setClassrooms","isLoadingClassrooms","setIsLoadingClassrooms","fetchClassroomsList","localforage","classroomsList","sort","createClassroom","trim","Error","getItem","setItem","uuid","insertStudent","existingClassroom","createStudent","sourceClassroomName","destinationClassroomName","sourceClassroom","studentToMove","find","all","basename","process","App","ReactDOM","render","StrictMode","locale","messages","translations","StylesProvider","injectFirst","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.da95bdce.chunk.js","sourcesContent":["import React, { forwardRef, HTMLProps, MouseEventHandler, SVGProps } from 'react';\nimport classes from './Button.module.scss';\n\ninterface ButtonProps extends HTMLProps<HTMLButtonElement> {\n    alt: string;\n    onClick?: MouseEventHandler<HTMLButtonElement>;\n    Icon: React.FC<SVGProps<SVGSVGElement> & { title?: string }>;\n    type?: \"button\" | \"submit\" | \"reset\" | undefined;\n    isLoading?: boolean;\n}\n\nconst Button: React.ForwardRefRenderFunction<HTMLButtonElement, ButtonProps> = ({\n    type = 'button',\n    Icon,\n    alt,\n    className,\n    disabled = false,\n    isLoading = false,\n    ...restProps\n}, ref) => (\n    <button\n        {...restProps}\n        disabled={disabled || isLoading}\n        className={`${classes.root} ${isLoading ? classes.loading : ''} ${className}`}\n        ref={ref}\n    >\n        <Icon title={alt} />\n    </button>\n);\n\nexport default forwardRef<HTMLButtonElement, ButtonProps>(Button);","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24ZM11 11V5H13V11H19V13H13V19H11V13H5V11H11Z\",\n  fill: \"current\"\n});\n\nfunction SvgAdd(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAdd);\nexport default __webpack_public_path__ + \"static/media/add.c0e6a8f8.svg\";\nexport { ForwardRef as ReactComponent };","import React, { RefObject } from 'react';\nimport { FieldProps } from 'formik';\nimport TextField from '@material-ui/core/TextField';\nimport classes from './InputField.module.scss';\n\ninterface InputFieldProps extends FieldProps {\n    className?: string;\n    placeholder: string;\n    disabled?: boolean;\n    inputRef: RefObject<HTMLInputElement>;\n    maxLength?: number;\n    submitForm?: () => Promise<void>\n}\n\nconst InputField: React.FC<InputFieldProps> = ({\n    className = '',\n    placeholder,\n    field,\n    disabled = false,\n    inputRef,\n    maxLength,\n    submitForm,\n    form: { errors },\n    ...restProps\n}) => (\n    <TextField\n        {...field}\n        {...restProps}\n        className={`${classes.wrapper} ${className}`}\n        variant=\"outlined\"\n        placeholder={placeholder}\n        disabled={disabled}\n        inputRef={inputRef}\n        inputProps={{ maxLength }}\n        error={!!errors[field.name]}\n        helperText={errors[field.name]}\n    />\n);\n\nexport default InputField;","import { HTMLProps } from 'react';\nimport { ClassroomPreview, Student } from './types';\n\nexport const sleep = (ms: number = 1200) =>\n    new Promise(resolve => setTimeout(resolve, ms));\n\nexport const naivelyCompareClassrooms = (a: ClassroomPreview, b: ClassroomPreview) => {\n    if (a === b) {\n        return 0;\n    }\n\n    const aYear = parseInt(a);\n    const bYear = parseInt(b);\n\n    if (!aYear || !bYear || aYear === bYear) {\n        return a < b ? -1 : 1;\n    }\n\n    return aYear < bYear ? -1 : 1;\n};\n\nexport const compareStudents = ({ name: aName }: Student, { name: bName }: Student) => {\n    if (aName === bName) {\n        return 0;\n    }\n\n    return aName?.toLowerCase() < bName?.toLowerCase() ? -1 : 1;\n}\n\nexport const executeOnEnter = (event: HTMLProps<KeyboardEvent>, fn: Function) => {\n    event.key === 'Enter' && fn();\n};","import React, { FormEvent, HTMLProps, useEffect, useRef, useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { NavLink } from 'react-router-dom';\nimport Button from '../Button';\nimport { ReactComponent as Add } from '../../assets/icons/add.svg';\nimport { ClassroomFormValues, ClassroomPreview, WithIntlProp } from '../../utils/types';\nimport classes from './ClassroomsList.module.scss';\nimport InputField from '../InputField';\nimport { Formik, Field, Form } from 'formik';\nimport { MAX_CLASSROOM_NAME_LENGTH } from '../../utils/constants';\nimport { executeOnEnter } from '../../utils';\n\nexport interface ClassroomsListProps extends WithIntlProp {\n    classrooms: ClassroomPreview[];\n    addClassroom: (classroom: ClassroomFormValues) => Promise<void>;\n    isLoading: boolean;\n}\n\nconst ClassroomsList: React.FC<ClassroomsListProps> = ({ classrooms, addClassroom, intl, isLoading }) => {\n    const [showClassroomInput, setShowClassroomInput] = useState<boolean>(false);\n    const inputRef = useRef<HTMLInputElement>(null);\n    const buttonRef = useRef<HTMLButtonElement>(null);\n\n    useEffect(() => {\n        showClassroomInput && inputRef.current?.focus();\n    }, [showClassroomInput, inputRef]);\n\n    return (\n        <div className={classes.wrapper}>\n            <Formik\n                initialValues={{ name: '' }}\n                onSubmit={async (values, { resetForm, setErrors }) => {\n                    try {\n                        await addClassroom(values);\n                        resetForm();\n                        setShowClassroomInput(false);\n                        buttonRef.current?.focus();\n                    } catch (e) {\n                        setErrors({ name: e.message });\n                        console.error(e);\n                        setTimeout(() => inputRef.current?.focus());\n                    }\n                }}\n            >\n                {({ isSubmitting, setFieldValue, submitForm }) => {\n                    return (\n                        <Form>\n                            <div className={classes.header}>\n                                <FormattedMessage tagName=\"h1\" id=\"classroomsContainer.header\"/>\n                                <Button\n                                    type=\"button\"\n                                    isLoading={isSubmitting || isLoading}\n                                    Icon={Add}\n                                    alt={intl.formatMessage({ id: 'classroomsContainer.alt.add' })}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        setShowClassroomInput(true)\n                                    }}\n                                    ref={buttonRef}\n                                />\n                            </div>\n                            <div className={classes.list}>\n                                {classrooms.map(classroom => (\n                                    <NavLink\n                                        key={classroom}\n                                        to={classroom}\n                                        className={classes.listItem}\n                                        activeClassName={classes.activeListItem}\n                                    >\n                                        {classroom}\n                                    </NavLink>\n                                ))}\n                            </div>\n                            {showClassroomInput && (\n                                <Field\n                                    name=\"name\"\n                                    component={InputField}\n                                    placeholder={intl.formatMessage({ id: 'classroomsContainer.placeholder.addClass' })}\n                                    disabled={isSubmitting || isLoading}\n                                    onChange={(e: FormEvent<HTMLInputElement>) =>\n                                        setFieldValue('name', e.currentTarget.value?.toUpperCase())}\n                                    inputRef={inputRef}\n                                    maxLength={MAX_CLASSROOM_NAME_LENGTH}\n                                    onKeyDown={(event: HTMLProps<KeyboardEvent>) => executeOnEnter(event, submitForm)}\n                                />\n                            )}\n                        </Form>\n                    );\n                }}\n            </Formik>\n        </div>\n    );\n};\n\nexport default ClassroomsList;","export const MAX_CLASSROOM_NAME_LENGTH = 50;\nexport const MAX_STUDENT_NAME_LENGTH = 250;","import { injectIntl } from 'react-intl';\nimport ClassroomsList from './ClassroomsList';\n\nexport default injectIntl(ClassroomsList);","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10.9964 22.1136C17.0362 22.1136 21.9283 17.2216 21.9283 11.1818C21.9283 5.14205 17.0362 0.25 10.9964 0.25C4.95668 0.25 0.0646307 5.14205 0.0646307 11.1818C0.0646307 17.2216 4.95668 22.1136 10.9964 22.1136ZM10.9964 20.7955C5.67827 20.7955 1.38281 16.4886 1.38281 11.1818C1.38281 5.86364 5.67827 1.56818 10.9964 1.56818C16.3146 1.56818 20.6101 5.86364 20.6101 11.1818C20.6101 16.4886 16.3146 20.7955 10.9964 20.7955ZM11.7578 16.2727L16.8487 11.1818L11.7578 6.09091L10.8828 6.96591L14.4851 10.5568H5.15554V11.8068H14.4851L10.8828 15.4091L11.7578 16.2727Z\",\n  fill: \"current\"\n});\n\nfunction SvgMove(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 23,\n    viewBox: \"0 0 22 23\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMove);\nexport default __webpack_public_path__ + \"static/media/move.80152e7c.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10.9964 22.1136C17.0362 22.1136 21.9283 17.2216 21.9283 11.1818C21.9283 5.14205 17.0362 0.25 10.9964 0.25C4.95668 0.25 0.0646307 5.14205 0.0646307 11.1818C0.0646307 17.2216 4.95668 22.1136 10.9964 22.1136ZM10.9964 20.7955C5.67827 20.7955 1.38281 16.4886 1.38281 11.1818C1.38281 5.86364 5.67827 1.56818 10.9964 1.56818C16.3146 1.56818 20.6101 5.86364 20.6101 11.1818C20.6101 16.4886 16.3146 20.7955 10.9964 20.7955ZM7.95099 15.1023L10.9964 12.0682L14.0419 15.1023L14.9283 14.2159L11.8828 11.1818L14.9283 8.14773L14.0419 7.26136L10.9964 10.2955L7.95099 7.26136L7.06463 8.14773L10.1101 11.1818L7.06463 14.2159L7.95099 15.1023Z\",\n  fill: \"current\"\n});\n\nfunction SvgRemove(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 23,\n    viewBox: \"0 0 22 23\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRemove);\nexport default __webpack_public_path__ + \"static/media/remove.839c96a5.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport { MuiThemeProvider, unstable_createMuiStrictModeTheme } from '@material-ui/core';\nimport classes from './SelectMenu.module.scss';\n\nexport interface SelectMenuProps {\n    title: string;\n    items: string[];\n    handleSelect: (id: string) => void;\n    anchorElement: HTMLButtonElement | null;\n    handleClose: () => void;\n}\n\n// TODO: all aria attributes, etc.\nconst SelectMenu: React.FC<SelectMenuProps> = ({ title, items, handleSelect, anchorElement, handleClose }) => (\n    <MuiThemeProvider theme={unstable_createMuiStrictModeTheme()}>\n        <Menu\n            open={!!anchorElement}\n            anchorEl={anchorElement}\n            onClose={handleClose}\n            classes={{ paper: classes.root }}\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n            style={{ transform: 'translate(25px, 35px)' }}\n            autoFocus\n        >\n            <div className={classes.title}>{title}</div>\n            {items.map((item) => (\n                <MenuItem classes={{ root: classes.listItem }} key={item} onClick={() => handleSelect(item)}>\n                    <Typography variant=\"inherit\" noWrap>\n                        {item}\n                    </Typography>\n                </MenuItem>\n            ))}\n        </Menu>\n    </MuiThemeProvider>\n);\n\nexport default SelectMenu;","import React, { useState } from 'react';\nimport classes from './StudentsListItem.module.scss';\nimport { ClassroomPreview, Student, WithIntlProp } from '../../utils/types';\nimport Button from '../Button';\nimport { ReactComponent as Move } from '../../assets/icons/move.svg';\nimport { ReactComponent as Remove } from '../../assets/icons/remove.svg';\nimport SelectMenu from '../SelectMenu';\n\nexport interface StudentsListItemProps extends Student, WithIntlProp {\n    handleMoveClick: (id: string) => void;\n    handleRemoveClick: (id: string) => void;\n    moveToOptions: ClassroomPreview[];\n}\n\nconst StudentsListItem: React.FC<StudentsListItemProps> = ({ id, name, handleMoveClick, handleRemoveClick, intl, moveToOptions }) => {\n    const [menuAnchorElement, setMenuAnchorElement] = useState<HTMLButtonElement | null>(null);\n    const [isRemoving, setIsRemoving] = useState<boolean>(false);\n    const [isMoving, setIsMoving] = useState<boolean>(false);\n\n    const onRemoveClick = async () => {\n        setIsRemoving(true);\n        await handleRemoveClick(id);\n    };\n\n    const onMoveClick = async (toClassId: string) => {\n        setMenuAnchorElement(null);\n        setIsMoving(true);\n        await handleMoveClick(toClassId);\n    };\n\n    return (\n        <div className={classes.wrapper}>\n            {name}\n            <div className={classes.actions}>\n                <Button\n                    className={classes.actionButton}\n                    onClick={(event) => setMenuAnchorElement(event.currentTarget)}\n                    Icon={Move}\n                    isLoading={isMoving}\n                    disabled={isRemoving}\n                    alt={intl.formatMessage({ id: 'studentsList.alt.moveTo' })}\n                />\n                <Button\n                    className={classes.actionButton}\n                    onClick={() => onRemoveClick()}\n                    Icon={Remove}\n                    isLoading={isRemoving}\n                    disabled={isMoving}\n                    alt={intl.formatMessage({ id: 'studentsList.alt.remove' })}\n                />\n                <SelectMenu\n                    title={intl.formatMessage({ id: 'studentsList.moveTo' })}\n                    handleClose={() => setMenuAnchorElement(null)}\n                    items={moveToOptions}\n                    handleSelect={(v) => onMoveClick(v)}\n                    anchorElement={menuAnchorElement}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default StudentsListItem;","import { injectIntl } from 'react-intl';\nimport StudentsListItem from './StudentsListItem';\n\nexport default injectIntl(StudentsListItem);","import React, { HTMLProps, useEffect, useRef, useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classes from './StudentsList.module.scss';\nimport { Classroom, ClassroomPreview, Student, StudentFormValues, WithIntlProp } from '../../utils/types';\nimport StudentsListItem from '../StudentsListItem';\nimport { Field, Form, Formik } from 'formik';\nimport InputField from '../InputField';\nimport { MAX_STUDENT_NAME_LENGTH } from '../../utils/constants';\nimport { executeOnEnter } from '../../utils';\n\nexport interface StudentsListProps extends WithIntlProp {\n    addStudent: (classroomName: string, values: StudentFormValues) => Promise<Classroom>;\n    removeStudent: (classroomName: string, studentId: string) => Promise<Classroom>;\n    fetchClassroom: (classroomName: string) => Promise<Classroom | null>;\n    moveStudent: (source: string, destination: string, studentId: string) => Promise<Classroom>;\n    classrooms: ClassroomPreview[];\n    classroomName: string;\n}\n\nconst StudentsList: React.FC<StudentsListProps> = ({\n    fetchClassroom,\n    removeStudent,\n    addStudent,\n    classrooms,\n    moveStudent,\n    classroomName,\n    intl,\n}) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const componentRef = useRef<boolean>(false);\n\n    const [students, setStudents] = useState<Student[]>([]);\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [isNoClassSelected, setIsNoClassSelected] = useState<boolean>(false);\n    const [otherClassrooms, setOtherClassrooms] = useState<ClassroomPreview[]>([]);\n\n    useEffect(() => {\n        const loadStudents = async () => {\n            setIsLoading(true);\n            setStudents([]);\n            const classroom = await fetchClassroom(classroomName);\n            setStudents(classroom?.students ?? []);\n\n            setIsNoClassSelected(!classroom);\n            setIsLoading(false);\n        };\n\n        componentRef.current = true;\n        loadStudents();\n\n        return () => {\n            componentRef.current = false;\n        };\n    }, [classroomName]);\n\n    useEffect(() => {\n        setOtherClassrooms(classrooms.filter(classroom => classroom !== classroomName));\n    }, [classrooms, classroomName]);\n\n    const handleRemoveStudent = async (studentId: string) => {\n        const classroom = await removeStudent(classroomName, studentId);\n        if (classroom?.name !== classroomName) return;\n\n        componentRef.current && setStudents(classroom?.students ?? []);\n    };\n\n    const handleMoveStudent = async (source: string, destination: string, studentId: string) => {\n        const classroom = await moveStudent(source, destination, studentId);\n        if (classroom?.name !== classroomName) return;\n\n        componentRef.current && setStudents(classroom?.students ?? []);\n    };\n\n    return (\n        <div key={classroomName} className={classes.wrapper}>\n            <h1>\n                {isLoading\n                    ? <FormattedMessage id=\"common.loading\" />\n                    : isNoClassSelected\n                        ? <FormattedMessage id=\"studentsList.empty\" />\n                        : classroomName}\n                <span className={classes.headerSubtext}>\n                    <FormattedMessage\n                        id=\"studentsList.students\"\n                        values={{ studentsCount: students.length }}\n                    />\n                </span>\n            </h1>\n            {classroomName && (\n                <Formik\n                    initialValues={{ studentName: '' }}\n                    onSubmit={async (values, { resetForm, setErrors }) => {\n                        try {\n                            const classroom = await addStudent(classroomName, values);\n\n                            resetForm();\n                            setStudents(classroom.students);\n                            inputRef.current?.focus();\n                        } catch (e) {\n                            console.error(e);\n                            setErrors({ studentName: e.message });\n                            setTimeout(() => inputRef.current?.focus());\n                        }\n                    }}\n                >\n                    {({ isSubmitting, submitForm }) => (\n                        <Form>\n                            <Field\n                                className={classes.input}\n                                name=\"studentName\"\n                                component={InputField}\n                                placeholder={intl.formatMessage({ id: 'studentsList.placeholder.addStudent' })}\n                                disabled={isSubmitting || isLoading}\n                                inputRef={inputRef}\n                                maxLength={MAX_STUDENT_NAME_LENGTH}\n                                onKeyDown={(event: HTMLProps<KeyboardEvent>) => executeOnEnter(event, submitForm)}\n                            />\n                        </Form>\n                    )}\n                </Formik>\n            )}\n            <div className={classes.list}>\n                {students?.map(student => (\n                    <StudentsListItem\n                        key={student.id}\n                        handleMoveClick={(destination) => handleMoveStudent(classroomName, destination, student.id)}\n                        handleRemoveClick={(id) => handleRemoveStudent(id)}\n                        moveToOptions={otherClassrooms}\n                        {...student}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default StudentsList;","import { injectIntl } from 'react-intl';\nimport StudentsList from './StudentsList';\n\nexport default injectIntl(StudentsList);","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport StudentsList from '../StudentsList';\nimport { StudentsListProps } from '../StudentsList/StudentsList';\n\nconst StudentsListWrapper: React.FC<Omit<StudentsListProps, 'intl' | 'classroomName'>> = (props) => {\n    const { pathname } = useLocation();\n    const classroomName = pathname?.slice(1);\n\n    return (\n        <StudentsList key={classroomName} {...props} classroomName={classroomName} />\n    );\n};\n\nexport default StudentsListWrapper;","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport localforage from 'localforage';\nimport { v4 as uuid } from 'uuid';\nimport classes from './ClassroomsContainer.module.scss';\nimport ClassroomsList from '../ClassroomsList';\nimport { compareStudents, naivelyCompareClassrooms, sleep } from '../../utils';\nimport { Classroom, ClassroomFormValues, ClassroomPreview, Student, StudentFormValues } from '../../utils/types';\nimport StudentsListWrapper from '../StudentsListWrapper';\n\nconst ClassroomsContainer: React.FC = () => {\n    const [classrooms, setClassrooms] = useState<ClassroomPreview[]>([]);\n    const [isLoadingClassrooms, setIsLoadingClassrooms] = useState<boolean>(false);\n\n    useEffect(() => {\n        fetchClassroomsList();\n    }, []);\n\n    const fetchClassroomsList = async () => {\n        setIsLoadingClassrooms(true);\n        await sleep();\n\n        const classroomsList = await localforage.keys();\n\n        setClassrooms(classroomsList.sort(naivelyCompareClassrooms));\n        setIsLoadingClassrooms(false);\n    };\n\n    const createClassroom = async ({ name }: ClassroomFormValues) => {\n        await sleep();\n\n        if (!name?.trim()) {\n            throw new Error('Value cannot be empty');\n        }\n\n        const existingClassroom = await localforage.getItem(name);\n\n        if (existingClassroom) {\n            throw new Error('Classroom already exists');\n        }\n\n        await localforage.setItem<Classroom>(name, { id: uuid(), name, students: [] });\n\n        setClassrooms([...classrooms, name].sort(naivelyCompareClassrooms));\n    };\n\n    const insertStudent = async (classroomName: string, { name, id }: Student) => {\n        await sleep(400);\n\n        if (!name?.trim()) {\n            throw new Error('Value cannot be empty');\n        }\n\n        const existingClassroom = await localforage.getItem<Classroom>(classroomName) as Classroom;\n\n        return localforage.setItem<Classroom>(classroomName, {\n            ...existingClassroom,\n            students: [\n                ...(existingClassroom?.students ?? []),\n                {\n                    id,\n                    name,\n                }\n            ].sort(compareStudents),\n        });\n    };\n\n    const createStudent = async (classroomName: string, { studentName }: StudentFormValues) =>\n        insertStudent(classroomName, { name: studentName, id: uuid() });\n\n    const fetchClassroom = async (classroomName: string) => {\n        await sleep(400);\n\n        return localforage.getItem<Classroom>(classroomName);\n    };\n\n    const removeStudent = async (classroomName: string, studentId: string) => {\n        await sleep();\n\n        const existingClassroom = await localforage.getItem<Classroom>(classroomName) as Classroom;\n\n        return localforage.setItem(classroomName, {\n            ...existingClassroom,\n            students: existingClassroom.students.filter(({ id }) => id !== studentId),\n        });\n    };\n\n    const moveStudent = async (sourceClassroomName: string, destinationClassroomName: string, studentId: string) => {\n        const sourceClassroom = await localforage.getItem<Classroom>(sourceClassroomName) as Classroom;\n\n        const studentToMove = sourceClassroom.students.find(({ id }) => id === studentId);\n\n        if (!studentToMove) return sourceClassroom;\n\n        const [source] = await Promise.all([\n            removeStudent(sourceClassroomName, studentId),\n            insertStudent(destinationClassroomName, studentToMove)\n        ]);\n\n        return source as Classroom;\n    };\n\n    return (\n        <Router basename={process.env.PUBLIC_URL}>\n            <div className={classes.wrapper}>\n                <ClassroomsList\n                    isLoading={isLoadingClassrooms}\n                    classrooms={classrooms}\n                    addClassroom={(v) => createClassroom(v)}\n                />\n                <StudentsListWrapper\n                    addStudent={createStudent}\n                    fetchClassroom={fetchClassroom}\n                    removeStudent={removeStudent}\n                    moveStudent={moveStudent}\n                    classrooms={classrooms}\n                />\n            </div>\n        </Router>\n    );\n};\n\nexport default ClassroomsContainer;","import React from 'react';\nimport ClassroomsContainer from '../ClassroomsContainer';\nimport classes from './App.module.scss';\n\nconst App: React.FC = () => (\n    <div className={classes.wrapper}>\n        <ClassroomsContainer/>\n    </div>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { StylesProvider } from '@material-ui/core/styles';\nimport { IntlProvider } from 'react-intl';\nimport messages from './lang/en.json';\nimport App from './components/App';\nimport './index.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <IntlProvider locale=\"en\" messages={messages.translations}>\n            <StylesProvider injectFirst>\n                <App/>\n            </StylesProvider>\n        </IntlProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ClassroomsList_wrapper__I5qcD\",\"header\":\"ClassroomsList_header__2Pu58\",\"list\":\"ClassroomsList_list__3GLBo\",\"listItem\":\"ClassroomsList_listItem__l1-NL\",\"activeListItem\":\"ClassroomsList_activeListItem__2DxMp\",\"buttonAdd\":\"ClassroomsList_buttonAdd__GRz8S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"StudentsList_wrapper__2Lr-W\",\"headerSubtext\":\"StudentsList_headerSubtext__1Ojp0\",\"input\":\"StudentsList_input__u1z8t\",\"list\":\"StudentsList_list__27JZp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"StudentsListItem_wrapper__2Cmwj\",\"actions\":\"StudentsListItem_actions__1DU0a\",\"actionButton\":\"StudentsListItem_actionButton__1vMGX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SelectMenu_root__2QJPn\",\"title\":\"SelectMenu_title__EH0bi\",\"listItem\":\"SelectMenu_listItem__1i7qy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Button_root__3ros1\",\"loading\":\"Button_loading__2nORI\",\"spinner\":\"Button_spinner__1Sq8N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ClassroomsContainer_wrapper__2JJ07\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"InputField_wrapper__FSV9o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__1Jn2B\"};"],"sourceRoot":""}